syntax = "proto3";

package v1;
option go_package = "github.com/ylallemant/panopticon/v1";

/*
* Process represents one host process
*/
message Process {
    int32 PID = 1;       // Process ID
    int32 PPID = 2;      // Parent Process ID
    int32 UserID = 3;    // User ID running the process
    string User = 4;     // User name running the process
    int64 Uptime = 5;    // Process uptime in seconds
    string Command = 6;  // Process command
    int32 childs = 7;    // child process count
}

/*
* ProcessReport holds information about a specific application process
*/
message ProcessReport {
    string name = 1;     // application name
    int64 firstSeen = 2; // timestamp of the first occurance
    int64 lastSeen = 3;  // timestamp of the last occurance
    int64 uptime = 4;    // cumulated runtime
}

/*
* ProcessReport represents a report about all processes
* running on a specific host
*/
message HostProcessReport {
    string hostname = 1;            // Host name
    string arch = 2;                // Host Architecture
    string os = 3;                  // Host OS
    int64 timestamp = 4;            // Reporting time
    int64 interval = 5;             // Reporting interval
    repeated Process processes = 6; // List of processes
}

/*
* Weekdays enumeration of the short names
*/
enum Weekdays {
    UnknownWeekday = 0;
    Mon = 1;
    Tus = 2;
    Wed = 3;
    Thu = 4;
    Fri = 5;
    Sat = 6;
    Son = 7;
}

/*
* LimitStatus
*/
enum DurationLimitStatus {
    UNLIMITED = 0; // no limit set, value is -1
    BLOCKED = 1;   // blocked, value is 0
    LIMITED = 2;   // limited, value is > 0
    UNTRACKED = 3; // untracked by the system, value is MAX INT
}

/*
* DailyLimit represents a duration limit for a specific weekday
*/
message DailyDurationLimit {
    string Weekday = 1; // Weekday short name
    int64 limit = 2;    // Time limit in seconds
}

/*
* DailySleepTime represents a time limit for a specific weekday
*/
message DailyTimeLimit {
    string Weekday = 1;
    string time = 2;
}

message HostUser {
    int32 id = 1;
    string name = 2;
}

/*
* Host represents a device tracked by the system
*/
message Host {
    string name = 1;                                       // Hostname
    string arch = 2;                                       // Hostname architecture
    string os = 3;                                         // Hostname OS
    repeated HostUser Admins = 4;                          // List of users that are viewed as admins by the system (rules don't apply to them)
    repeated HostUser Users = 5;                           // List of active users on the device. Discovered by the Process Reports
    map<string, HostUser> UserMapping = 6;                   // mapping between users on the device and users tracked by the system
    map<string, ProcessReport> Processes = 7;              // map of runing applications on the host and their process report
    repeated DailyDurationLimit DefaultDurationLimits = 8; // Default daily duration limits for the device
    repeated DailyTimeLimit DefaultTimeLimits = 9;         // Default daily time limits for the device
    bool hasChanged = 10;                                  // flags the host as modified whenever a new user or a new application is registered
}

/*
* Application represents the definition for
* an application tracked by the system
*/
message Application {
    string Name = 1;                                       // Name of the application
    repeated string Regexps = 2;                           // List of regular expressions that match the application process commands
    repeated DailyDurationLimit DefaultDurationLimits = 3; // Default daily limits for the application
    repeated DailyTimeLimit DefaultTimeLimits = 4;         // Default daily time limits for the application
}

/*
* ClassifiedProcess represents a relation between
* a process and an application
*/
message ClassifiedProcess {
    Process process = 1;          // Process
    Application application = 2;  // Matching application
}

/*
* UserLimits represents limitations for a specific user
*/
message UserLimits {
    string Identifier = 1;                       // Identifier of the user (email)
    repeated DailyDurationLimit Device = 2;      // User specific daily device duration limits
    repeated DailyDurationLimit Application = 3; // User specific daily application duration limits
    repeated DailyDurationLimit Activity = 4;    // User specific daily activity duration limits
    repeated DailyTimeLimit SleepTime = 5;       // User specific daily bed times
    bool Blocked = 6;                            // Whether or not the user is blocked
}

/*
* User represents a user tracked by the system
*/
message User {
    string Identifier = 1;           // Identifier of the user (email)
    string Username = 2;             // Name of the user
    map<string, string> devices = 3; // Usernames on specific devices
}

/*
* DeviceCumulatedTime represents the usage duration of something
*/
message CumulatedTime {
    string Identifier = 1;
    int64 StartTime = 2;
    int64 Duration = 3;
}

/*
* ApplicationCumulatedTime represents the usage duration of something
*/
message ApplicationCumulatedTime {
    string Identifier = 1;
    int64 Duration = 2;
    repeated CumulatedTime Durations = 3;
}

/*
* UserDailyReport represents a tracked user activity by day
*/
message UserDailyReport {
    int64 timestamp = 1;
    string Identifier = 2;                   // Identifier of the user (email)
    repeated ApplicationCumulatedTime applications = 3;
    repeated CumulatedTime devices = 4;
    int64 totalDuration = 5;
}
