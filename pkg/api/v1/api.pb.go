// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1-devel
// 	protoc        v3.17.3
// source: v1/api.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

//
// Weekdays enumeration of the short names
type Weekdays int32

const (
	Weekdays_UnknownWeekday Weekdays = 0
	Weekdays_Mon            Weekdays = 1
	Weekdays_Tus            Weekdays = 2
	Weekdays_Wed            Weekdays = 3
	Weekdays_Thu            Weekdays = 4
	Weekdays_Fri            Weekdays = 5
	Weekdays_Sat            Weekdays = 6
	Weekdays_Son            Weekdays = 7
)

// Enum value maps for Weekdays.
var (
	Weekdays_name = map[int32]string{
		0: "UnknownWeekday",
		1: "Mon",
		2: "Tus",
		3: "Wed",
		4: "Thu",
		5: "Fri",
		6: "Sat",
		7: "Son",
	}
	Weekdays_value = map[string]int32{
		"UnknownWeekday": 0,
		"Mon":            1,
		"Tus":            2,
		"Wed":            3,
		"Thu":            4,
		"Fri":            5,
		"Sat":            6,
		"Son":            7,
	}
)

func (x Weekdays) Enum() *Weekdays {
	p := new(Weekdays)
	*p = x
	return p
}

func (x Weekdays) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Weekdays) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_api_proto_enumTypes[0].Descriptor()
}

func (Weekdays) Type() protoreflect.EnumType {
	return &file_v1_api_proto_enumTypes[0]
}

func (x Weekdays) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Weekdays.Descriptor instead.
func (Weekdays) EnumDescriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{0}
}

//
// LimitStatus
type DurationLimitStatus int32

const (
	DurationLimitStatus_UNLIMITED DurationLimitStatus = 0 // no limit set, value is -1
	DurationLimitStatus_BLOCKED   DurationLimitStatus = 1 // blocked, value is 0
	DurationLimitStatus_LIMITED   DurationLimitStatus = 2 // limited, value is > 0
	DurationLimitStatus_UNTRACKED DurationLimitStatus = 3 // untracked by the system, value is MAX INT
)

// Enum value maps for DurationLimitStatus.
var (
	DurationLimitStatus_name = map[int32]string{
		0: "UNLIMITED",
		1: "BLOCKED",
		2: "LIMITED",
		3: "UNTRACKED",
	}
	DurationLimitStatus_value = map[string]int32{
		"UNLIMITED": 0,
		"BLOCKED":   1,
		"LIMITED":   2,
		"UNTRACKED": 3,
	}
)

func (x DurationLimitStatus) Enum() *DurationLimitStatus {
	p := new(DurationLimitStatus)
	*p = x
	return p
}

func (x DurationLimitStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DurationLimitStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_v1_api_proto_enumTypes[1].Descriptor()
}

func (DurationLimitStatus) Type() protoreflect.EnumType {
	return &file_v1_api_proto_enumTypes[1]
}

func (x DurationLimitStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DurationLimitStatus.Descriptor instead.
func (DurationLimitStatus) EnumDescriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{1}
}

//
// Process represents one host process
type Process struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PID     int32  `protobuf:"varint,1,opt,name=PID,proto3" json:"PID,omitempty"`        // Process ID
	PPID    int32  `protobuf:"varint,2,opt,name=PPID,proto3" json:"PPID,omitempty"`      // Parent Process ID
	UserID  int32  `protobuf:"varint,3,opt,name=UserID,proto3" json:"UserID,omitempty"`  // User ID running the process
	User    string `protobuf:"bytes,4,opt,name=User,proto3" json:"User,omitempty"`       // User name running the process
	Uptime  int64  `protobuf:"varint,5,opt,name=Uptime,proto3" json:"Uptime,omitempty"`  // Process uptime in seconds
	Command string `protobuf:"bytes,6,opt,name=Command,proto3" json:"Command,omitempty"` // Process command
	Childs  int32  `protobuf:"varint,7,opt,name=childs,proto3" json:"childs,omitempty"`  // child process count
}

func (x *Process) Reset() {
	*x = Process{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Process) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Process) ProtoMessage() {}

func (x *Process) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Process.ProtoReflect.Descriptor instead.
func (*Process) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{0}
}

func (x *Process) GetPID() int32 {
	if x != nil {
		return x.PID
	}
	return 0
}

func (x *Process) GetPPID() int32 {
	if x != nil {
		return x.PPID
	}
	return 0
}

func (x *Process) GetUserID() int32 {
	if x != nil {
		return x.UserID
	}
	return 0
}

func (x *Process) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Process) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

func (x *Process) GetCommand() string {
	if x != nil {
		return x.Command
	}
	return ""
}

func (x *Process) GetChilds() int32 {
	if x != nil {
		return x.Childs
	}
	return 0
}

//
// ProcessReport holds information about a specific application process
type ProcessReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name      string `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`            // application name
	FirstSeen int64  `protobuf:"varint,2,opt,name=firstSeen,proto3" json:"firstSeen,omitempty"` // timestamp of the first occurance
	LastSeen  int64  `protobuf:"varint,3,opt,name=lastSeen,proto3" json:"lastSeen,omitempty"`   // timestamp of the last occurance
	Uptime    int64  `protobuf:"varint,4,opt,name=uptime,proto3" json:"uptime,omitempty"`       // cumulated runtime
}

func (x *ProcessReport) Reset() {
	*x = ProcessReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ProcessReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessReport) ProtoMessage() {}

func (x *ProcessReport) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessReport.ProtoReflect.Descriptor instead.
func (*ProcessReport) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessReport) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ProcessReport) GetFirstSeen() int64 {
	if x != nil {
		return x.FirstSeen
	}
	return 0
}

func (x *ProcessReport) GetLastSeen() int64 {
	if x != nil {
		return x.LastSeen
	}
	return 0
}

func (x *ProcessReport) GetUptime() int64 {
	if x != nil {
		return x.Uptime
	}
	return 0
}

//
// ProcessReport represents a report about all processes
// running on a specific host
type HostProcessReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hostname  string     `protobuf:"bytes,1,opt,name=hostname,proto3" json:"hostname,omitempty"`    // Host name
	Arch      string     `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`            // Host Architecture
	Os        string     `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`                // Host OS
	Timestamp int64      `protobuf:"varint,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // Reporting time
	Interval  int64      `protobuf:"varint,5,opt,name=interval,proto3" json:"interval,omitempty"`   // Reporting interval
	Processes []*Process `protobuf:"bytes,6,rep,name=processes,proto3" json:"processes,omitempty"`  // List of processes
}

func (x *HostProcessReport) Reset() {
	*x = HostProcessReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostProcessReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostProcessReport) ProtoMessage() {}

func (x *HostProcessReport) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostProcessReport.ProtoReflect.Descriptor instead.
func (*HostProcessReport) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{2}
}

func (x *HostProcessReport) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *HostProcessReport) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *HostProcessReport) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *HostProcessReport) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HostProcessReport) GetInterval() int64 {
	if x != nil {
		return x.Interval
	}
	return 0
}

func (x *HostProcessReport) GetProcesses() []*Process {
	if x != nil {
		return x.Processes
	}
	return nil
}

//
// DailyLimit represents a duration limit for a specific weekday
type DailyDurationLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weekday string `protobuf:"bytes,1,opt,name=Weekday,proto3" json:"Weekday,omitempty"` // Weekday short name
	Limit   int64  `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`    // Time limit in seconds
}

func (x *DailyDurationLimit) Reset() {
	*x = DailyDurationLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyDurationLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyDurationLimit) ProtoMessage() {}

func (x *DailyDurationLimit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyDurationLimit.ProtoReflect.Descriptor instead.
func (*DailyDurationLimit) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{3}
}

func (x *DailyDurationLimit) GetWeekday() string {
	if x != nil {
		return x.Weekday
	}
	return ""
}

func (x *DailyDurationLimit) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

//
// DailySleepTime represents a time limit for a specific weekday
type DailyTimeLimit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Weekday string `protobuf:"bytes,1,opt,name=Weekday,proto3" json:"Weekday,omitempty"`
	Time    string `protobuf:"bytes,2,opt,name=time,proto3" json:"time,omitempty"`
}

func (x *DailyTimeLimit) Reset() {
	*x = DailyTimeLimit{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DailyTimeLimit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DailyTimeLimit) ProtoMessage() {}

func (x *DailyTimeLimit) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DailyTimeLimit.ProtoReflect.Descriptor instead.
func (*DailyTimeLimit) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{4}
}

func (x *DailyTimeLimit) GetWeekday() string {
	if x != nil {
		return x.Weekday
	}
	return ""
}

func (x *DailyTimeLimit) GetTime() string {
	if x != nil {
		return x.Time
	}
	return ""
}

type HostUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *HostUser) Reset() {
	*x = HostUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HostUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HostUser) ProtoMessage() {}

func (x *HostUser) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HostUser.ProtoReflect.Descriptor instead.
func (*HostUser) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{5}
}

func (x *HostUser) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *HostUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

//
// Host represents a device tracked by the system
type Host struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string                    `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                                       // Hostname
	Arch                  string                    `protobuf:"bytes,2,opt,name=arch,proto3" json:"arch,omitempty"`                                                                                                       // Hostname architecture
	Os                    string                    `protobuf:"bytes,3,opt,name=os,proto3" json:"os,omitempty"`                                                                                                           // Hostname OS
	Admins                []*HostUser               `protobuf:"bytes,4,rep,name=Admins,proto3" json:"Admins,omitempty"`                                                                                                   // List of users that are viewed as admins by the system (rules don't apply to them)
	Users                 []*HostUser               `protobuf:"bytes,5,rep,name=Users,proto3" json:"Users,omitempty"`                                                                                                     // List of active users on the device. Discovered by the Process Reports
	UserMapping           map[string]*HostUser      `protobuf:"bytes,6,rep,name=UserMapping,proto3" json:"UserMapping,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // mapping between users on the device and users tracked by the system
	Processes             map[string]*ProcessReport `protobuf:"bytes,7,rep,name=Processes,proto3" json:"Processes,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`     // map of runing applications on the host and their process report
	DefaultDurationLimits []*DailyDurationLimit     `protobuf:"bytes,8,rep,name=DefaultDurationLimits,proto3" json:"DefaultDurationLimits,omitempty"`                                                                     // Default daily duration limits for the device
	DefaultTimeLimits     []*DailyTimeLimit         `protobuf:"bytes,9,rep,name=DefaultTimeLimits,proto3" json:"DefaultTimeLimits,omitempty"`                                                                             // Default daily time limits for the device
	HasChanged            bool                      `protobuf:"varint,10,opt,name=hasChanged,proto3" json:"hasChanged,omitempty"`                                                                                         // flags the host as modified whenever a new user or a new application is registered
}

func (x *Host) Reset() {
	*x = Host{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Host) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Host) ProtoMessage() {}

func (x *Host) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Host.ProtoReflect.Descriptor instead.
func (*Host) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{6}
}

func (x *Host) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Host) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *Host) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *Host) GetAdmins() []*HostUser {
	if x != nil {
		return x.Admins
	}
	return nil
}

func (x *Host) GetUsers() []*HostUser {
	if x != nil {
		return x.Users
	}
	return nil
}

func (x *Host) GetUserMapping() map[string]*HostUser {
	if x != nil {
		return x.UserMapping
	}
	return nil
}

func (x *Host) GetProcesses() map[string]*ProcessReport {
	if x != nil {
		return x.Processes
	}
	return nil
}

func (x *Host) GetDefaultDurationLimits() []*DailyDurationLimit {
	if x != nil {
		return x.DefaultDurationLimits
	}
	return nil
}

func (x *Host) GetDefaultTimeLimits() []*DailyTimeLimit {
	if x != nil {
		return x.DefaultTimeLimits
	}
	return nil
}

func (x *Host) GetHasChanged() bool {
	if x != nil {
		return x.HasChanged
	}
	return false
}

//
// Application represents the definition for
// an application tracked by the system
type Application struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  string                `protobuf:"bytes,1,opt,name=Name,proto3" json:"Name,omitempty"`                                   // Name of the application
	Regexps               []string              `protobuf:"bytes,2,rep,name=Regexps,proto3" json:"Regexps,omitempty"`                             // List of regular expressions that match the application process commands
	DefaultDurationLimits []*DailyDurationLimit `protobuf:"bytes,3,rep,name=DefaultDurationLimits,proto3" json:"DefaultDurationLimits,omitempty"` // Default daily limits for the application
	DefaultTimeLimits     []*DailyTimeLimit     `protobuf:"bytes,4,rep,name=DefaultTimeLimits,proto3" json:"DefaultTimeLimits,omitempty"`         // Default daily time limits for the application
}

func (x *Application) Reset() {
	*x = Application{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{7}
}

func (x *Application) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Application) GetRegexps() []string {
	if x != nil {
		return x.Regexps
	}
	return nil
}

func (x *Application) GetDefaultDurationLimits() []*DailyDurationLimit {
	if x != nil {
		return x.DefaultDurationLimits
	}
	return nil
}

func (x *Application) GetDefaultTimeLimits() []*DailyTimeLimit {
	if x != nil {
		return x.DefaultTimeLimits
	}
	return nil
}

//
// ClassifiedProcess represents a relation between
// a process and an application
type ClassifiedProcess struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Process     *Process     `protobuf:"bytes,1,opt,name=process,proto3" json:"process,omitempty"`         // Process
	Application *Application `protobuf:"bytes,2,opt,name=application,proto3" json:"application,omitempty"` // Matching application
}

func (x *ClassifiedProcess) Reset() {
	*x = ClassifiedProcess{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClassifiedProcess) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClassifiedProcess) ProtoMessage() {}

func (x *ClassifiedProcess) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClassifiedProcess.ProtoReflect.Descriptor instead.
func (*ClassifiedProcess) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{8}
}

func (x *ClassifiedProcess) GetProcess() *Process {
	if x != nil {
		return x.Process
	}
	return nil
}

func (x *ClassifiedProcess) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

//
// UserLimits represents limitations for a specific user
type UserLimits struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier  string                `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`   // Identifier of the user (email)
	Device      []*DailyDurationLimit `protobuf:"bytes,2,rep,name=Device,proto3" json:"Device,omitempty"`           // User specific daily device duration limits
	Application []*DailyDurationLimit `protobuf:"bytes,3,rep,name=Application,proto3" json:"Application,omitempty"` // User specific daily application duration limits
	Activity    []*DailyDurationLimit `protobuf:"bytes,4,rep,name=Activity,proto3" json:"Activity,omitempty"`       // User specific daily activity duration limits
	SleepTime   []*DailyTimeLimit     `protobuf:"bytes,5,rep,name=SleepTime,proto3" json:"SleepTime,omitempty"`     // User specific daily bed times
	Blocked     bool                  `protobuf:"varint,6,opt,name=Blocked,proto3" json:"Blocked,omitempty"`        // Whether or not the user is blocked
}

func (x *UserLimits) Reset() {
	*x = UserLimits{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserLimits) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserLimits) ProtoMessage() {}

func (x *UserLimits) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserLimits.ProtoReflect.Descriptor instead.
func (*UserLimits) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{9}
}

func (x *UserLimits) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UserLimits) GetDevice() []*DailyDurationLimit {
	if x != nil {
		return x.Device
	}
	return nil
}

func (x *UserLimits) GetApplication() []*DailyDurationLimit {
	if x != nil {
		return x.Application
	}
	return nil
}

func (x *UserLimits) GetActivity() []*DailyDurationLimit {
	if x != nil {
		return x.Activity
	}
	return nil
}

func (x *UserLimits) GetSleepTime() []*DailyTimeLimit {
	if x != nil {
		return x.SleepTime
	}
	return nil
}

func (x *UserLimits) GetBlocked() bool {
	if x != nil {
		return x.Blocked
	}
	return false
}

//
// User represents a user tracked by the system
type User struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string            `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`                                                                                   // Identifier of the user (email)
	Username   string            `protobuf:"bytes,2,opt,name=Username,proto3" json:"Username,omitempty"`                                                                                       // Name of the user
	Devices    map[string]string `protobuf:"bytes,3,rep,name=devices,proto3" json:"devices,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // Usernames on specific devices
}

func (x *User) Reset() {
	*x = User{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *User) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*User) ProtoMessage() {}

func (x *User) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use User.ProtoReflect.Descriptor instead.
func (*User) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{10}
}

func (x *User) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *User) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *User) GetDevices() map[string]string {
	if x != nil {
		return x.Devices
	}
	return nil
}

//
// DeviceCumulatedTime represents the usage duration of something
type CumulatedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	StartTime  int64  `protobuf:"varint,2,opt,name=StartTime,proto3" json:"StartTime,omitempty"`
	Duration   int64  `protobuf:"varint,3,opt,name=Duration,proto3" json:"Duration,omitempty"`
}

func (x *CumulatedTime) Reset() {
	*x = CumulatedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CumulatedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CumulatedTime) ProtoMessage() {}

func (x *CumulatedTime) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CumulatedTime.ProtoReflect.Descriptor instead.
func (*CumulatedTime) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{11}
}

func (x *CumulatedTime) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *CumulatedTime) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *CumulatedTime) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

//
// ApplicationCumulatedTime represents the usage duration of something
type ApplicationCumulatedTime struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Identifier string           `protobuf:"bytes,1,opt,name=Identifier,proto3" json:"Identifier,omitempty"`
	Duration   int64            `protobuf:"varint,2,opt,name=Duration,proto3" json:"Duration,omitempty"`
	Durations  []*CumulatedTime `protobuf:"bytes,3,rep,name=Durations,proto3" json:"Durations,omitempty"`
}

func (x *ApplicationCumulatedTime) Reset() {
	*x = ApplicationCumulatedTime{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ApplicationCumulatedTime) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationCumulatedTime) ProtoMessage() {}

func (x *ApplicationCumulatedTime) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationCumulatedTime.ProtoReflect.Descriptor instead.
func (*ApplicationCumulatedTime) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{12}
}

func (x *ApplicationCumulatedTime) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *ApplicationCumulatedTime) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ApplicationCumulatedTime) GetDurations() []*CumulatedTime {
	if x != nil {
		return x.Durations
	}
	return nil
}

//
// UserDailyReport represents a tracked user activity by day
type UserDailyReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp     int64                       `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Identifier    string                      `protobuf:"bytes,2,opt,name=Identifier,proto3" json:"Identifier,omitempty"` // Identifier of the user (email)
	Applications  []*ApplicationCumulatedTime `protobuf:"bytes,3,rep,name=applications,proto3" json:"applications,omitempty"`
	Devices       []*CumulatedTime            `protobuf:"bytes,4,rep,name=devices,proto3" json:"devices,omitempty"`
	TotalDuration int64                       `protobuf:"varint,5,opt,name=totalDuration,proto3" json:"totalDuration,omitempty"`
}

func (x *UserDailyReport) Reset() {
	*x = UserDailyReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_v1_api_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserDailyReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserDailyReport) ProtoMessage() {}

func (x *UserDailyReport) ProtoReflect() protoreflect.Message {
	mi := &file_v1_api_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserDailyReport.ProtoReflect.Descriptor instead.
func (*UserDailyReport) Descriptor() ([]byte, []int) {
	return file_v1_api_proto_rawDescGZIP(), []int{13}
}

func (x *UserDailyReport) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *UserDailyReport) GetIdentifier() string {
	if x != nil {
		return x.Identifier
	}
	return ""
}

func (x *UserDailyReport) GetApplications() []*ApplicationCumulatedTime {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *UserDailyReport) GetDevices() []*CumulatedTime {
	if x != nil {
		return x.Devices
	}
	return nil
}

func (x *UserDailyReport) GetTotalDuration() int64 {
	if x != nil {
		return x.TotalDuration
	}
	return 0
}

var File_v1_api_proto protoreflect.FileDescriptor

var file_v1_api_proto_rawDesc = []byte{
	0x0a, 0x0c, 0x76, 0x31, 0x2f, 0x61, 0x70, 0x69, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x02,
	0x76, 0x31, 0x22, 0xa5, 0x01, 0x0a, 0x07, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x10,
	0x0a, 0x03, 0x50, 0x49, 0x44, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x50, 0x49, 0x44,
	0x12, 0x12, 0x0a, 0x04, 0x50, 0x50, 0x49, 0x44, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x50, 0x50, 0x49, 0x44, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49, 0x44, 0x12, 0x12, 0x0a, 0x04,
	0x55, 0x73, 0x65, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x16, 0x0a, 0x06, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x55, 0x70, 0x74, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x43, 0x6f, 0x6d, 0x6d,
	0x61, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x43, 0x6f, 0x6d, 0x6d, 0x61,
	0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x0d, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x1c, 0x0a, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x66, 0x69, 0x72, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x1a, 0x0a,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x6c, 0x61, 0x73, 0x74, 0x53, 0x65, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x70, 0x74,
	0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x70, 0x74, 0x69, 0x6d,
	0x65, 0x22, 0xb8, 0x01, 0x0a, 0x11, 0x48, 0x6f, 0x73, 0x74, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x68, 0x6f, 0x73, 0x74, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x6f, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73,
	0x74, 0x61, 0x6d, 0x70, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x76, 0x61,
	0x6c, 0x12, 0x29, 0x0a, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x06,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x09, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x22, 0x44, 0x0a, 0x12,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d,
	0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x6c, 0x69, 0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d,
	0x69, 0x74, 0x22, 0x3e, 0x0a, 0x0e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x69,
	0x6d, 0x65, 0x22, 0x2e, 0x0a, 0x08, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x22, 0xcb, 0x04, 0x0a, 0x04, 0x48, 0x6f, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x61, 0x72, 0x63, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x61,
	0x72, 0x63, 0x68, 0x12, 0x0e, 0x0a, 0x02, 0x6f, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x02, 0x6f, 0x73, 0x12, 0x24, 0x0a, 0x06, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x06, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x05, 0x55, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f,
	0x73, 0x74, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x55, 0x73, 0x65, 0x72, 0x73, 0x12, 0x3b, 0x0a,
	0x0b, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x18, 0x06, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x19, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x55, 0x73, 0x65,
	0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0b, 0x55,
	0x73, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67, 0x12, 0x35, 0x0a, 0x09, 0x50, 0x72,
	0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x09, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65,
	0x73, 0x12, 0x4c, 0x0a, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c,
	0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12,
	0x40, 0x0a, 0x11, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69,
	0x6d, 0x69, 0x74, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e,
	0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x11,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x64, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x61, 0x73, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65,
	0x64, 0x1a, 0x4c, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4d, 0x61, 0x70, 0x70, 0x69, 0x6e, 0x67,
	0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x22, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x76, 0x31, 0x2e, 0x48, 0x6f, 0x73, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x1a,
	0x4f, 0x0a, 0x0e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x52,
	0x65, 0x70, 0x6f, 0x72, 0x74, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01,
	0x22, 0xcb, 0x01, 0x0a, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x12, 0x0a, 0x04, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x73, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x73, 0x12, 0x4c,
	0x0a, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x15, 0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x40, 0x0a, 0x11,
	0x44, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x69,
	0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x11, 0x44, 0x65, 0x66,
	0x61, 0x75, 0x6c, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x22, 0x6d,
	0x0a, 0x11, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x69, 0x66, 0x69, 0x65, 0x64, 0x50, 0x72, 0x6f, 0x63,
	0x65, 0x73, 0x73, 0x12, 0x25, 0x0a, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x72, 0x6f, 0x63, 0x65, 0x73,
	0x73, 0x52, 0x07, 0x70, 0x72, 0x6f, 0x63, 0x65, 0x73, 0x73, 0x12, 0x31, 0x0a, 0x0b, 0x61, 0x70,
	0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0b, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x96, 0x02,
	0x0a, 0x0a, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x73, 0x12, 0x1e, 0x0a, 0x0a,
	0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x2e, 0x0a, 0x06,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76,
	0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x52, 0x06, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x38, 0x0a, 0x0b,
	0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74, 0x52, 0x0b, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x32, 0x0a, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69,
	0x74, 0x79, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x61,
	0x69, 0x6c, 0x79, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6d, 0x69, 0x74,
	0x52, 0x08, 0x41, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x30, 0x0a, 0x09, 0x53, 0x6c,
	0x65, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x76, 0x31, 0x2e, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x4c, 0x69, 0x6d, 0x69,
	0x74, 0x52, 0x09, 0x53, 0x6c, 0x65, 0x65, 0x70, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x42,
	0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x22, 0xaf, 0x01, 0x0a, 0x04, 0x55, 0x73, 0x65, 0x72, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x1a, 0x0a, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x07, 0x64,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e, 0x76,
	0x31, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x1a, 0x3a, 0x0a, 0x0c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x69, 0x0a, 0x0d, 0x43, 0x75, 0x6d, 0x75,
	0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65,
	0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49,
	0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x53, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x18, 0x41, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72,
	0x12, 0x1a, 0x0a, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2f, 0x0a, 0x09,
	0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x11, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x52, 0x09, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xe4, 0x01,
	0x0a, 0x0f, 0x55, 0x73, 0x65, 0x72, 0x44, 0x61, 0x69, 0x6c, 0x79, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12,
	0x1e, 0x0a, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x49, 0x64, 0x65, 0x6e, 0x74, 0x69, 0x66, 0x69, 0x65, 0x72, 0x12,
	0x40, 0x0a, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x70, 0x70, 0x6c, 0x69,
	0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54,
	0x69, 0x6d, 0x65, 0x52, 0x0c, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x73, 0x12, 0x2b, 0x0a, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x75, 0x6d, 0x75, 0x6c, 0x61, 0x74, 0x65,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x52, 0x07, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x73, 0x12, 0x24,
	0x0a, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x44, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2a, 0x5d, 0x0a, 0x08, 0x57, 0x65, 0x65, 0x6b, 0x64, 0x61, 0x79, 0x73,
	0x12, 0x12, 0x0a, 0x0e, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x57, 0x65, 0x65, 0x6b, 0x64,
	0x61, 0x79, 0x10, 0x00, 0x12, 0x07, 0x0a, 0x03, 0x4d, 0x6f, 0x6e, 0x10, 0x01, 0x12, 0x07, 0x0a,
	0x03, 0x54, 0x75, 0x73, 0x10, 0x02, 0x12, 0x07, 0x0a, 0x03, 0x57, 0x65, 0x64, 0x10, 0x03, 0x12,
	0x07, 0x0a, 0x03, 0x54, 0x68, 0x75, 0x10, 0x04, 0x12, 0x07, 0x0a, 0x03, 0x46, 0x72, 0x69, 0x10,
	0x05, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x61, 0x74, 0x10, 0x06, 0x12, 0x07, 0x0a, 0x03, 0x53, 0x6f,
	0x6e, 0x10, 0x07, 0x2a, 0x4d, 0x0a, 0x13, 0x44, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x6d, 0x69, 0x74, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e,
	0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45, 0x44, 0x10, 0x00, 0x12, 0x0b, 0x0a, 0x07, 0x42, 0x4c, 0x4f,
	0x43, 0x4b, 0x45, 0x44, 0x10, 0x01, 0x12, 0x0b, 0x0a, 0x07, 0x4c, 0x49, 0x4d, 0x49, 0x54, 0x45,
	0x44, 0x10, 0x02, 0x12, 0x0d, 0x0a, 0x09, 0x55, 0x4e, 0x54, 0x52, 0x41, 0x43, 0x4b, 0x45, 0x44,
	0x10, 0x03, 0x42, 0x25, 0x5a, 0x23, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x79, 0x6c, 0x61, 0x6c, 0x6c, 0x65, 0x6d, 0x61, 0x6e, 0x74, 0x2f, 0x70, 0x61, 0x6e, 0x6f,
	0x70, 0x74, 0x69, 0x63, 0x6f, 0x6e, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_v1_api_proto_rawDescOnce sync.Once
	file_v1_api_proto_rawDescData = file_v1_api_proto_rawDesc
)

func file_v1_api_proto_rawDescGZIP() []byte {
	file_v1_api_proto_rawDescOnce.Do(func() {
		file_v1_api_proto_rawDescData = protoimpl.X.CompressGZIP(file_v1_api_proto_rawDescData)
	})
	return file_v1_api_proto_rawDescData
}

var file_v1_api_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_v1_api_proto_msgTypes = make([]protoimpl.MessageInfo, 17)
var file_v1_api_proto_goTypes = []interface{}{
	(Weekdays)(0),                    // 0: v1.Weekdays
	(DurationLimitStatus)(0),         // 1: v1.DurationLimitStatus
	(*Process)(nil),                  // 2: v1.Process
	(*ProcessReport)(nil),            // 3: v1.ProcessReport
	(*HostProcessReport)(nil),        // 4: v1.HostProcessReport
	(*DailyDurationLimit)(nil),       // 5: v1.DailyDurationLimit
	(*DailyTimeLimit)(nil),           // 6: v1.DailyTimeLimit
	(*HostUser)(nil),                 // 7: v1.HostUser
	(*Host)(nil),                     // 8: v1.Host
	(*Application)(nil),              // 9: v1.Application
	(*ClassifiedProcess)(nil),        // 10: v1.ClassifiedProcess
	(*UserLimits)(nil),               // 11: v1.UserLimits
	(*User)(nil),                     // 12: v1.User
	(*CumulatedTime)(nil),            // 13: v1.CumulatedTime
	(*ApplicationCumulatedTime)(nil), // 14: v1.ApplicationCumulatedTime
	(*UserDailyReport)(nil),          // 15: v1.UserDailyReport
	nil,                              // 16: v1.Host.UserMappingEntry
	nil,                              // 17: v1.Host.ProcessesEntry
	nil,                              // 18: v1.User.DevicesEntry
}
var file_v1_api_proto_depIdxs = []int32{
	2,  // 0: v1.HostProcessReport.processes:type_name -> v1.Process
	7,  // 1: v1.Host.Admins:type_name -> v1.HostUser
	7,  // 2: v1.Host.Users:type_name -> v1.HostUser
	16, // 3: v1.Host.UserMapping:type_name -> v1.Host.UserMappingEntry
	17, // 4: v1.Host.Processes:type_name -> v1.Host.ProcessesEntry
	5,  // 5: v1.Host.DefaultDurationLimits:type_name -> v1.DailyDurationLimit
	6,  // 6: v1.Host.DefaultTimeLimits:type_name -> v1.DailyTimeLimit
	5,  // 7: v1.Application.DefaultDurationLimits:type_name -> v1.DailyDurationLimit
	6,  // 8: v1.Application.DefaultTimeLimits:type_name -> v1.DailyTimeLimit
	2,  // 9: v1.ClassifiedProcess.process:type_name -> v1.Process
	9,  // 10: v1.ClassifiedProcess.application:type_name -> v1.Application
	5,  // 11: v1.UserLimits.Device:type_name -> v1.DailyDurationLimit
	5,  // 12: v1.UserLimits.Application:type_name -> v1.DailyDurationLimit
	5,  // 13: v1.UserLimits.Activity:type_name -> v1.DailyDurationLimit
	6,  // 14: v1.UserLimits.SleepTime:type_name -> v1.DailyTimeLimit
	18, // 15: v1.User.devices:type_name -> v1.User.DevicesEntry
	13, // 16: v1.ApplicationCumulatedTime.Durations:type_name -> v1.CumulatedTime
	14, // 17: v1.UserDailyReport.applications:type_name -> v1.ApplicationCumulatedTime
	13, // 18: v1.UserDailyReport.devices:type_name -> v1.CumulatedTime
	7,  // 19: v1.Host.UserMappingEntry.value:type_name -> v1.HostUser
	3,  // 20: v1.Host.ProcessesEntry.value:type_name -> v1.ProcessReport
	21, // [21:21] is the sub-list for method output_type
	21, // [21:21] is the sub-list for method input_type
	21, // [21:21] is the sub-list for extension type_name
	21, // [21:21] is the sub-list for extension extendee
	0,  // [0:21] is the sub-list for field type_name
}

func init() { file_v1_api_proto_init() }
func file_v1_api_proto_init() {
	if File_v1_api_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_v1_api_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Process); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ProcessReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostProcessReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyDurationLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DailyTimeLimit); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HostUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Host); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Application); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClassifiedProcess); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserLimits); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*User); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CumulatedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ApplicationCumulatedTime); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_v1_api_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserDailyReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_v1_api_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   17,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_v1_api_proto_goTypes,
		DependencyIndexes: file_v1_api_proto_depIdxs,
		EnumInfos:         file_v1_api_proto_enumTypes,
		MessageInfos:      file_v1_api_proto_msgTypes,
	}.Build()
	File_v1_api_proto = out.File
	file_v1_api_proto_rawDesc = nil
	file_v1_api_proto_goTypes = nil
	file_v1_api_proto_depIdxs = nil
}
